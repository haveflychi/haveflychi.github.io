<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端 on Maxbit Docs</title>
    <link>https://docs.cakepanit.com/docs/dev/front-end/</link>
    <description>Recent content in 前端 on Maxbit Docs</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <managingEditor>admin@cakepanit.com (饼铛)</managingEditor>
    <webMaster>admin@cakepanit.com (饼铛)</webMaster>
    <lastBuildDate>Thu, 07 Nov 2024 00:23:51 +0800</lastBuildDate>
    <atom:link href="https://docs.cakepanit.com/docs/dev/front-end/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.HTML</title>
      <link>https://docs.cakepanit.com/docs/dev/front-end/1.html/</link>
      <pubDate>Wed, 03 May 2023 22:37:22 +0100</pubDate><author>admin@cakepanit.com (饼铛)</author>
      <guid>https://docs.cakepanit.com/docs/dev/front-end/1.html/</guid>
      <description>1.1 一个基础例子 link一个基础的HTML例子：&#xA;&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;page name&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;title 1&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;sub title&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;paragraph text&amp;lt;/p&amp;gt; &amp;lt;h1&amp;gt;title 2&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;paragraph text&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 整个文件由html标签包着，其中由分为首部和主体两部分，分别用head标签和body标签包裹。&#xA;首部告诉浏览器关于网页的信息，如页面标题，首部包括&amp;lt;head&amp;gt;和&amp;lt;/head&amp;gt;之间的所有内容。其中的title标签定义了网页的标题，meta标签指定了字符编码。&#xA;主体包含网页的所有内容和结构，也就是在浏览器直接看到的部分，主体包括&amp;lt;body&amp;gt;和&amp;lt;/body&amp;gt;之间的所有内容。其中的h1标签和h2标签分别是一级标题和二级标题，p标签则是段落。&#xA;保存为HTML文件，在浏览器打开后，页面效果如下：&#xA;此外，还可以在HTML的首部里增加一些样式，就是style标签。style标签有一个可选的属性type，一般指定为&amp;quot;text/css&amp;quot;。&#xA;&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;page name&amp;lt;/title&amp;gt; &amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; body { background-color: #d2b48c; margin-left: 20%; margin-right: 20%; border: 2px dotted black; padding: 10px 10px 10px 10px; font-family: sans-serif; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;title 1&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;sub title&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;paragraph text&amp;lt;/p&amp;gt; &amp;lt;h1&amp;gt;title 2&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;paragraph text&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; style标签中的body表示这段配置应用于主体中的body标签。</description>
    </item>
    <item>
      <title>2.CSS</title>
      <link>https://docs.cakepanit.com/docs/dev/front-end/2.css/</link>
      <pubDate>Wed, 03 May 2023 22:37:22 +0100</pubDate><author>admin@cakepanit.com (饼铛)</author>
      <guid>https://docs.cakepanit.com/docs/dev/front-end/2.css/</guid>
      <description>1.CSS样式语言 link 为了让网页元素的样式更加丰富，也为了让网页的内容和样式能拆分开，CSS由此思想而诞生。 CSS是 Cascading Style Sheets 的首字母缩写，意思是层叠样式表。 有了CSS，html中大部分表现样式的标签就废弃不用了，html只负责文档的结构和内容，表现形式完全交给CSS，html文档变得更加简洁。 2.CSS使用方式 link 内联方式（行内样式） &amp;lt;p style=&amp;#34;color:red&amp;#34;&amp;gt;直接在html内使用样式&amp;lt;/p&amp;gt; 内部方式（内嵌方式）在head标签中使用 &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt; &amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; p { color: red; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; 外部导入式（推荐）在head标签中使用 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; type=&amp;#34;text/css&amp;#34; href=&amp;#34;css/index.css&amp;#34;&amp;gt; 3.CSS选择器 link 选择器：需要改变样式的HTML元素 格式：选择器（属性:值;属性:值;属性:值;&amp;hellip;..） 常见选择器：标签(元素)选择器、类型选择器、ID选择器、派生选择器 3.1元素选择器 link 使用html标签作为选择器，为指定标签设置样式 示例1：h1元素设置样式 h1 { color: darkcyan; font-size: 14; } 示例2：为多个元素设置样式 h2,h3 { color: chartreuse; } 示例3：子元素会继承最高级元素所有属性 如果子元素有自己的样式优先用自己，如果没有则用父元素样式 body { color: darkcyan; font-family: Verdana, sarif; /*字体*/ } h1 { color: brown; font-size: 14; } 3.</description>
    </item>
    <item>
      <title>3.JavaScript</title>
      <link>https://docs.cakepanit.com/docs/dev/front-end/3.js/</link>
      <pubDate>Wed, 03 May 2023 22:37:22 +0100</pubDate><author>admin@cakepanit.com (饼铛)</author>
      <guid>https://docs.cakepanit.com/docs/dev/front-end/3.js/</guid>
      <description>1.JavaScript发展史 link JavaScript(简称JS):是一种轻量级客户端脚本语言，通常被嵌入HTML页面，在浏览器上执行。 JavaScript的主要用途： 使网页具有交互性，例如响应客户点击，给用户提供更好的体验。 处理表单，检测用户输入，并及时反馈提醒。 浏览器与服务端之间数据通信，主要通过Ajax异步传输。 在网页中添加标签，添加样式，改变标签的属性等。对Dom节定进行操作 2.HelloWorld link &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34; xmlns=&amp;#34;http://www.w3.org/1999/html&amp;#34; xmlns=&amp;#34;http://www.w3.org/1999/html&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;首页&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt;Hello Js&amp;lt;/p&amp;gt; &amp;lt;script&amp;gt; var name = &amp;#39;Hello JavaScript&amp;#39;; alert(name); &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 3.事件 link 事件 描述 onclick 点击 HTML 元素时触发 onmouseover 鼠标移动到元素上时触发 onkeydown 按下键盘按键时触发 onchange HTML 元素发生变化时触发 onmouseout 鼠标移开 HTML 元素时触发 onload 页面加载完成时触发 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34; xmlns=&amp;#34;http://www.w3.org/1999/html&amp;#34; xmlns=&amp;#34;http://www.w3.org/1999/html&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;首页&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;button onclick=&amp;#34;alert(&amp;#39;点击时触发&amp;#39;)&amp;#34;&amp;gt;onclick&amp;lt;/button&amp;gt; &amp;lt;button onmouseenter=&amp;#34;alert(&amp;#39;鼠标移动上来时触发&amp;#39;)&amp;#34;&amp;gt;onmouseenter&amp;lt;/button&amp;gt; &amp;lt;button onmouseout=&amp;#34;alert(&amp;#39;鼠标移开时触发&amp;#39;)&amp;#34;&amp;gt;onmouseout&amp;lt;/button&amp;gt; &amp;lt;br&amp;gt; 输入你的名字：&amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;fName&amp;#34; onchange=&amp;#34;myfunction()&amp;#34; /&amp;gt; &amp;lt;script&amp;gt; function myfunction(){ var inputName = document.</description>
    </item>
    <item>
      <title>4.Vue</title>
      <link>https://docs.cakepanit.com/docs/dev/front-end/4.vue/</link>
      <pubDate>Wed, 03 May 2023 22:37:22 +0100</pubDate><author>admin@cakepanit.com (饼铛)</author>
      <guid>https://docs.cakepanit.com/docs/dev/front-end/4.vue/</guid>
      <description>1.Vue介绍 link 官网：https://cn.vuejs.org&#xA;Vue.js：简称Vue，是一套用于快速构建用户界面的渐进式前端框架。 Vue.js核心实现 响应式数据绑定：当数据发生改变，视图可以自动更新，不用关心DOM操作，专心数据操作。 可组合的视图组件：把视图按照功能切分成若干个基本单元，可维护，可重用，可测试等特点。 响应式，双向数据绑定，即MVVM。是指数据层（Model）-视图层（View）-数据视图（ViewModel）的响应式框架。 1.2引入Vue.js link 参考文档：https://cn.vuejs.org/guide/quick-start.html&#xA;在html中使用CDN包的形式引入 &amp;lt;script src=&amp;quot;https://unpkg.com/vue@3&amp;quot;&amp;gt;&amp;lt;script&amp;gt; 下载js文件保存到本地再导入 使用npm安装 npm install @vue/cli@4.5.12 使用官方vuecli脚手架创建项目（不建议新手使用） vue create vue-demo 番外：&#xA;const var let的区别 var有设计缺陷，不建议使用 用const和let定义变量，const本身是常量的意思 let 定义函数内局部变量 function xxx() { let xxx } 1.3声明式渲染 link Hello World示例:Vue.js 的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进 DOM 的系统 &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html;charset=UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;demo&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#34;https://unpkg.com/vue@3&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;style&amp;gt; &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;hello-vue&amp;#34;&amp;gt; {{ message }} &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; const { ref } = Vue const HelloVueApp = { setup() { const message = ref(&amp;#39;Hello,Vue&amp;#39;) return { message } } } Vue.</description>
    </item>
  </channel>
</rss>
