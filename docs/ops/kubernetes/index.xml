<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Maxbit Docs</title>
    <link>https://docs.cakepanit.com/docs/ops/kubernetes/</link>
    <description>Recent content in Kubernetes on Maxbit Docs</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <managingEditor>admin@cakepanit.com (饼铛)</managingEditor>
    <webMaster>admin@cakepanit.com (饼铛)</webMaster>
    <lastBuildDate>Wed, 03 May 2023 22:37:22 +0100</lastBuildDate>
    <atom:link href="https://docs.cakepanit.com/docs/ops/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.Kubernetes-v1.28.3高可用集群二进制部署(IPv4&#43;IPv6双栈)</title>
      <link>https://docs.cakepanit.com/docs/ops/kubernetes/1.kubernetes-v1.28.3%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 03 May 2023 22:37:22 +0100</pubDate><author>admin@cakepanit.com (饼铛)</author>
      <guid>https://docs.cakepanit.com/docs/ops/kubernetes/1.kubernetes-v1.28.3%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2/</guid>
      <description>介绍 link kubernetes（k8s）二进制高可用安装部署，支持IPv4+IPv6双栈。 我使用IPV6的目的是在公网进行访问，所以我配置了IPV6静态地址。 若您没有IPV6环境，或者不想使用IPv6，不对主机进行配置IPv6地址即可。 不配置IPV6，不影响后续，不过集群依旧是支持IPv6的。为后期留有扩展可能性。 若不要IPv6 ，不给网卡配置IPv6即可，不要对IPv6相关配置删除或操作，否则会出问题。 1.环境 link 主机名称 IP地址 说明 软件 192.168.1.60 外网节点 下载各种所需安装包 Master01 192.168.1.31 master节点 kube-apiserver、kube-controller-manager、kube-scheduler、etcd、&#xA;kubelet、kube-proxy、nfs-client、haproxy、keepalived、nginx Master02 192.168.1.32 master节点 kube-apiserver、kube-controller-manager、kube-scheduler、etcd、&#xA;kubelet、kube-proxy、nfs-client、haproxy、keepalived、nginx Master03 192.168.1.33 master节点 kube-apiserver、kube-controller-manager、kube-scheduler、etcd、&#xA;kubelet、kube-proxy、nfs-client、haproxy、keepalived、nginx Node01 192.168.1.34 node节点 kubelet、kube-proxy、nfs-client、nginx Node02 192.168.1.35 node节点 kubelet、kube-proxy、nfs-client、nginx 192.168.1.36 VIP 网段 物理主机：192.168.1.0/24 service：10.96.0.0/12 pod：172.16.0.0/12&#xA;1.1.k8s基础系统环境配置 link1.2.配置IP link # 注意！ # 若虚拟机是进行克隆的那么网卡的UUID会重复 # 若UUID重复需要重新生成新的UUID # UUID重复无法获取到IPV6地址 # # 查看当前的网卡列表和 UUID： # nmcli con show # 删除要更改 UUID 的网络连接： # nmcli con delete uuid &amp;lt;原 UUID&amp;gt; # 重新生成 UUID： # nmcli con add type ethernet ifname &amp;lt;接口名称&amp;gt; con-name &amp;lt;新名称&amp;gt; # 重新启用网络连接： # nmcli con up &amp;lt;新名称&amp;gt; # 更改网卡的UUID ssh root@192.</description>
    </item>
    <item>
      <title>2.Kubernetes-v1.30.2高可用集群二进制部署(IPv4&#43;IPv6双栈)</title>
      <link>https://docs.cakepanit.com/docs/ops/kubernetes/2.kubernetes-v1.30.2%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 03 May 2023 22:37:22 +0100</pubDate><author>admin@cakepanit.com (饼铛)</author>
      <guid>https://docs.cakepanit.com/docs/ops/kubernetes/2.kubernetes-v1.30.2%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2/</guid>
      <description>介绍 link kubernetes（k8s）二进制高可用安装部署，支持IPv4+IPv6双栈。 我使用IPV6的目的是在公网进行访问，所以我配置了IPV6静态地址。 若您没有IPV6环境，或者不想使用IPv6，不对主机进行配置IPv6地址即可。 不配置IPV6，不影响后续，不过集群依旧是支持IPv6的。为后期留有扩展可能性。 若不要IPv6 ，不给网卡配置IPv6即可，不要对IPv6相关配置删除或操作，否则会出问题。 1.环境 link 主机名称 IP地址 说明 软件 192.168.1.60 外网节点 下载各种所需安装包 Master01 192.168.1.41 master节点 kube-apiserver、kube-controller-manager、kube-scheduler、etcd、&#xA;kubelet、kube-proxy、nfs-client、haproxy、keepalived、nginx Master02 192.168.1.42 master节点 kube-apiserver、kube-controller-manager、kube-scheduler、etcd、&#xA;kubelet、kube-proxy、nfs-client、haproxy、keepalived、nginx Master03 192.168.1.43 master节点 kube-apiserver、kube-controller-manager、kube-scheduler、etcd、&#xA;kubelet、kube-proxy、nfs-client、haproxy、keepalived、nginx Node01 192.168.1.44 node节点 kubelet、kube-proxy、nfs-client、nginx Node02 192.168.1.45 node节点 kubelet、kube-proxy、nfs-client、nginx 192.168.1.46 VIP 网段 物理主机：192.168.1.0/24 service：10.96.0.0/12 pod：172.16.0.0/12&#xA;1.1.k8s基础系统环境配置 link1.2.配置IP link # 注意！ # 若虚拟机是进行克隆的那么网卡的UUID和MachineID会重复 # 需要重新生成新的UUIDUUID和MachineID # UUID和MachineID重复无法DHCP获取到IPV6地址 ssh root@192.168.1.155 &amp;#34;rm -rf /etc/machine-id; systemd-machine-id-setup;reboot&amp;#34; ssh root@192.168.1.158 &amp;#34;rm -rf /etc/machine-id; systemd-machine-id-setup;reboot&amp;#34; ssh root@192.</description>
    </item>
    <item>
      <title>3.升级二进制部署的kubernetes集群</title>
      <link>https://docs.cakepanit.com/docs/ops/kubernetes/3.%E5%8D%87%E7%BA%A7%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2%E7%9A%84kubernetes%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Wed, 03 May 2023 22:37:22 +0100</pubDate><author>admin@cakepanit.com (饼铛)</author>
      <guid>https://docs.cakepanit.com/docs/ops/kubernetes/3.%E5%8D%87%E7%BA%A7%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2%E7%9A%84kubernetes%E9%9B%86%E7%BE%A4/</guid>
      <description>基础操作 link查看当前版本信息 link [root@k8s-master01 ~]# kubectl get node NAME STATUS ROLES AGE VERSION k8s-master01 Ready &amp;lt;none&amp;gt; 57d v1.23.6 k8s-master02 Ready &amp;lt;none&amp;gt; 57d v1.23.6 k8s-master03 Ready &amp;lt;none&amp;gt; 57d v1.23.6 k8s-node01 Ready &amp;lt;none&amp;gt; 57d v1.23.6 k8s-node02 Ready &amp;lt;none&amp;gt; 57d v1.23.6 [root@k8s-master01 ~]# 主机域名以及IP地址 link [root@k8s-master01 ~]# cat /etc/hosts | grep k8s 192.168.1.230 k8s-master01 192.168.1.231 k8s-master02 192.168.1.232 k8s-master03 192.168.1.233 k8s-node01 192.168.1.234 k8s-node02 [root@k8s-master01 ~]# 下载二进制安装包 link [root@k8s-master01 ~]# wget https://dl.k8s.io/v1.23.9/kubernetes-server-linux-amd64.tar.gz [root@k8s-master01 ~]# 解压二进制安装包 link [root@k8s-master01 ~]# tar xf kubernetes-server-linux-amd64.</description>
    </item>
    <item>
      <title>4.Kubernetes核心概念介绍</title>
      <link>https://docs.cakepanit.com/docs/ops/kubernetes/4.kubernetes%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Wed, 03 May 2023 22:37:22 +0100</pubDate><author>admin@cakepanit.com (饼铛)</author>
      <guid>https://docs.cakepanit.com/docs/ops/kubernetes/4.kubernetes%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D/</guid>
      <description>Kubernetes核心 link1. kubernetes核心概念 link1.1 Pod linkPod是可以在 Kubernetes 中创建和管理的、最小的可部署的计算单元。&#xA;Pod就像豌豆荚一样，其中包含着一组（一个或多个）容器； 这些容器共享存储、网络、以及怎样运行这些容器的声明。&#xA;Pod就像一台物理服务器一样，其中包含一个或多个应用容器， 这些容器中运行着用户应用程序。&#xA;举例说明Pod、Container、应用程序三者之间的关系：麻屋子,红帐子,里面住着白胖子。Pod就是麻屋子,Container就是红帐子,应用程序就是里面的白胖子。&#xA;1.2 Controller link在 Kubernetes 中，用于管理和运行Pod的对象&#xA;在 Kubernetes 中，控制器通过监控集群的公共状态，并致力于将当前状态转变为期望的状态&#xA;举例说明Controller(控制器)作用：房间里的温度自动调节器&#xA;当你设置了温度，告诉了温度自动调节器你的期望状态（Desired State）。 房间的实际温度是当前状态（Current State）。 通过对设备的开关控制，温度自动调节器让其当前状态接近期望状态。&#xA;一个控制器至少追踪一种类型的 Kubernetes 资源。这些对象有一个代表期望状态的 spec 字段。 该资源的控制器负责确保其当前状态接近期望状态。&#xA;不同的类型的控制器所实现的控制方式不一样，例如：&#xA;deployment 部署无状态应用 部署无状态应用: 认为pod 都一样，没有顺序要求， 不用考虑在哪个node 运行，随意进行扩展和伸缩 管理Pod和 ReplicaSet 部署、滚动升级等 典型的像web服务、分布式服务等 StatefulSet 部署有状态应用 有状态应用，每个pod 都独立运行，保持pod 启动顺序和唯一性； 有唯一的网络标识符，持久存储； 有序，比如mysql 主从； 主机名称固定。 而且其扩容以及升级等操作也是按顺序进行的操作。 DaemonSet 部署守护进程 DaemonSet保证在每个Node上都运行一个容器副本，常用来部署一些集群的日志、监控或者其他系统管理应用。 新加入的node 也同样运行在一个pod 里面。 job 一次性任务 Job负责批量处理短暂的一次性任务 (short lived one-off tasks)，即仅执行一次的任务，它保证批处理任务的一个或多个Pod成功结束。 Cronjob 周期性定时任务 1.</description>
    </item>
  </channel>
</rss>
